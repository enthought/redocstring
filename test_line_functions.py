#This file was originally generated by PyScripter's unitest wizard

import unittest
import line_functions

class TestGlobalFunctions(unittest.TestCase):

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def test_add_indent(self):
        input = ["This is the first line", "",
                 "   This is the third line"]
        expected = ["   This is the first line", "",
                 "      This is the third line"]
        output = line_functions.add_indent(input, indent=3)
        self.assertEqual(output, expected)

    def test_remove_indent(self):
        input = ["   This is the first line", "",
                 "      This is the third line"]
        expected = ["This is the first line", "",
                 "This is the third line"]
        output = line_functions.remove_indent(input)
        self.assertEqual(output, expected)

    def test_get_indent(self):
        output = line_functions.get_indent('')
        self.assertEqual(output, '')

        output = line_functions.get_indent('  _dgsdg 44')
        self.assertEqual(output, '  ')

    def test_is_empty(self):
        output = line_functions.is_empty('                  ')
        self.assertTrue(output)
        output = line_functions.is_empty('         .         ')
        self.assertFalse(output)

    def test_fix_star(self):
        output = line_functions.fix_star('*arg')
        self.assertEqual(r'\*arg', output)
        output = line_functions.fix_star('**sfg')
        self.assertEqual(r'\*\*sfg', output)

    def test_fix_backspace(self):
        output = line_functions.fix_star('ar\g')
        self.assertEqual(r'ar\\g', output)

    def test_replace_at(self):
        input =    ' This is where the new starts'
        expected = ' This is w   3 the new starts'
        output = line_functions.replace_at('   3',input,10)
        self.assertEqual(expected, output)

        input =    ' This is where the new starts'
        expected = ' This is where the new start '
        output = line_functions.replace_at('   3',input,28)
        self.assertEqual(expected, output)

        input =    ' This is where the new starts'
        expected = ' This is where the new starts'
        output = line_functions.replace_at('   3',input,30)
        self.assertEqual(expected, output)

if __name__ == '__main__':
    unittest.main()
